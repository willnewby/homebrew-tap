# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Qq < Formula
  desc "A simple, fast job queue based on River Queue"
  homepage "https://github.com/willnewby/qq"
  version "0.1.6"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/willnewby/qq/releases/download/v0.1.6/qq_Darwin_x86_64.tar.gz"
      sha256 "016b4c71c854bc71685bb4ce2f103f29765947f90b6eab9bfe7e911920ea7fd2"

      def install
        bin.install "qq"

        # Generate and install shell completions
        output = Utils.safe_popen_read("#{bin}/qq", "completion", "bash")
        (bash_completion/"qq").write output

        output = Utils.safe_popen_read("#{bin}/qq", "completion", "zsh")
        (zsh_completion/"_qq").write output

        output = Utils.safe_popen_read("#{bin}/qq", "completion", "fish")
        (fish_completion/"qq.fish").write output
      end
    end
    on_arm do
      url "https://github.com/willnewby/qq/releases/download/v0.1.6/qq_Darwin_arm64.tar.gz"
      sha256 "46966e5e8694cfd66bf8466ebc8fb6fd4ecb957d01d0a2205eeef341c7496473"

      def install
        bin.install "qq"

        # Generate and install shell completions
        output = Utils.safe_popen_read("#{bin}/qq", "completion", "bash")
        (bash_completion/"qq").write output

        output = Utils.safe_popen_read("#{bin}/qq", "completion", "zsh")
        (zsh_completion/"_qq").write output

        output = Utils.safe_popen_read("#{bin}/qq", "completion", "fish")
        (fish_completion/"qq.fish").write output
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/willnewby/qq/releases/download/v0.1.6/qq_Linux_x86_64.tar.gz"
        sha256 "49287287cf6e16aec86c873be45373d0de7b4aa6dbcfa3015cf31e7af8b8651a"

        def install
          bin.install "qq"

          # Generate and install shell completions
          output = Utils.safe_popen_read("#{bin}/qq", "completion", "bash")
          (bash_completion/"qq").write output

          output = Utils.safe_popen_read("#{bin}/qq", "completion", "zsh")
          (zsh_completion/"_qq").write output

          output = Utils.safe_popen_read("#{bin}/qq", "completion", "fish")
          (fish_completion/"qq.fish").write output
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/willnewby/qq/releases/download/v0.1.6/qq_Linux_arm64.tar.gz"
        sha256 "64ed0008035dd7afa5ee07cf8afd2d48ccb92125389b149c393e9a77f50af49e"

        def install
          bin.install "qq"

          # Generate and install shell completions
          output = Utils.safe_popen_read("#{bin}/qq", "completion", "bash")
          (bash_completion/"qq").write output

          output = Utils.safe_popen_read("#{bin}/qq", "completion", "zsh")
          (zsh_completion/"_qq").write output

          output = Utils.safe_popen_read("#{bin}/qq", "completion", "fish")
          (fish_completion/"qq.fish").write output
        end
      end
    end
  end

  test do
    system "#{bin}/qq", "--version"
  end
end
