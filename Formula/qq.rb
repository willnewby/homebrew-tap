# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Qq < Formula
  desc "A simple, fast job queue based on River Queue"
  homepage "https://github.com/willnewby/qq"
  version "0.1.5"
  license "MIT"

  on_macos do
    on_intel do
      url "https://github.com/willnewby/qq/releases/download/v0.1.5/qq_Darwin_x86_64.tar.gz"
      sha256 "14a72eefb09857df7c2b746321c1fb0fffca1787f7c6b8a077cf3ebba08565e3"

      def install
        bin.install "qq"

        # Generate and install shell completions
        output = Utils.safe_popen_read("#{bin}/qq", "completion", "bash")
        (bash_completion/"qq").write output

        output = Utils.safe_popen_read("#{bin}/qq", "completion", "zsh")
        (zsh_completion/"_qq").write output

        output = Utils.safe_popen_read("#{bin}/qq", "completion", "fish")
        (fish_completion/"qq.fish").write output
      end
    end
    on_arm do
      url "https://github.com/willnewby/qq/releases/download/v0.1.5/qq_Darwin_arm64.tar.gz"
      sha256 "64dffadd199a53a20e6915aa59e2b2d25429bd8a81266a423cbeaff6468c3c1b"

      def install
        bin.install "qq"

        # Generate and install shell completions
        output = Utils.safe_popen_read("#{bin}/qq", "completion", "bash")
        (bash_completion/"qq").write output

        output = Utils.safe_popen_read("#{bin}/qq", "completion", "zsh")
        (zsh_completion/"_qq").write output

        output = Utils.safe_popen_read("#{bin}/qq", "completion", "fish")
        (fish_completion/"qq.fish").write output
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/willnewby/qq/releases/download/v0.1.5/qq_Linux_x86_64.tar.gz"
        sha256 "55c70195452fd408aa6b03e629bba68687f61a1c46c742c7a248f552ef188039"

        def install
          bin.install "qq"

          # Generate and install shell completions
          output = Utils.safe_popen_read("#{bin}/qq", "completion", "bash")
          (bash_completion/"qq").write output

          output = Utils.safe_popen_read("#{bin}/qq", "completion", "zsh")
          (zsh_completion/"_qq").write output

          output = Utils.safe_popen_read("#{bin}/qq", "completion", "fish")
          (fish_completion/"qq.fish").write output
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/willnewby/qq/releases/download/v0.1.5/qq_Linux_arm64.tar.gz"
        sha256 "2e6e27eca58dd6e8a0821347c8544541cf3355f189b0bcc4273a129bc1ab099b"

        def install
          bin.install "qq"

          # Generate and install shell completions
          output = Utils.safe_popen_read("#{bin}/qq", "completion", "bash")
          (bash_completion/"qq").write output

          output = Utils.safe_popen_read("#{bin}/qq", "completion", "zsh")
          (zsh_completion/"_qq").write output

          output = Utils.safe_popen_read("#{bin}/qq", "completion", "fish")
          (fish_completion/"qq.fish").write output
        end
      end
    end
  end

  test do
    system "#{bin}/qq", "--version"
  end
end
